# creates a new release for LIVE and PTU channel every day at 3am when the corresponding global.ini
# was changed in the last 24 hours
#
# steps:
# 1. checkout code
# 2. count the commits for the global.ini in the last 24 hours
# - the following steps are only run then the commit count is > 0
# 3. get the current date
# 4. create the zip
# 5. create the release

on:
  workflow_dispatch: # used only for testing to trigger the workflow from the GitHub website
    inputs:
      logLevel:
        description: 'Log Level'
        required: true
        default: 'warning'
      tags:
        description: 'Test Scenario Tags'
  schedule:
    - cron: "0 3 * * *"

name: Create Release

jobs:
  build-live:
    name: Create LIVE Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get New Commits # counts the commits to live/global.ini during the last 24 hours
        run: echo "NEW_COMMIT_COUNT=$(git log --oneline --since '24 hours ago' -- live/global.ini | wc -l)" >> $GITHUB_ENV
      
      - name: Show Commit Count
        run: echo "$(git log --oneline --since '24 hours ago' -- live/global.ini | wc -l)"

      - name: Get Date # runs only when live/global.ini was changed in the last 24 hours
        if: ${{ env.NEW_COMMIT_COUNT > 0 }}
        id: date
        run: echo "date=$(date '+%d.%m.%y')" >> $GITHUB_OUTPUT

      - name: Create Zip # runs only when live/global.ini was changed in the last 24 hours
        if: ${{ env.NEW_COMMIT_COUNT > 0 }}
        run: |
          sudo timedatectl set-timezone Europe/Berlin
          mkdir release
          cp "live/user.cfg" "release"
          mkdir -p "release/data/Localization/german_(germany)"
          cp "live/global.ini" "release/data/Localization/german_(germany)/"
          cd release
          echo "${{ vars.VERSION_FILE_TEXT_LIVE }} ${{ steps.date.outputs.date }}" >> version.txt
          zip -r -9 "../${{ vars.ZIP_NAME_LIVE }}" *

      - name: Create Release # runs only when live/global.ini was changed in the last 24 hours
        if: ${{ env.NEW_COMMIT_COUNT > 0 }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.date.outputs.date }}-LIVE
          commit: main
          name: ${{ vars.RELEASE_TITLE_LIVE }}
          body: ${{ vars.RELEASE_BODY_LIVE }}
          artifacts: ${{ vars.ZIP_NAME_LIVE }}
          generateReleaseNotes: true

  build-ptu:
    name: Create PTU Pre-Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get New Commits # counts the commits to ptu/global.ini during the last 24 hours
        run: echo "NEW_COMMIT_COUNT=$(git log --oneline --since '24 hours ago' -- ptu/global.ini | wc -l)" >> $GITHUB_ENV

      - name: Get Date # runs only when ptu/global.ini was changed in the last 24 hours
        if: ${{ env.NEW_COMMIT_COUNT > 0 }}
        id: date
        run: echo "date=$(date '+%d.%m.%y')" >> $GITHUB_OUTPUT

      - name: Create Zip # runs only when ptu/global.ini was changed in the last 24 hours
        if: ${{ env.NEW_COMMIT_COUNT > 0 }}
        run: |
          sudo timedatectl set-timezone Europe/Berlin
          mkdir release
          cp "ptu/user.cfg" "release"
          mkdir -p "release/data/Localization/german_(germany)"
          cp "ptu/global.ini" "release/data/Localization/german_(germany)/"
          cd release
          echo "${{ vars.VERSION_FILE_TEXT_PTU }} ${{ steps.date.outputs.date }}" >> version.txt
          zip -r -9 "../${{ vars.ZIP_NAME_PTU }}" *

      - name: Create Release # runs only when ptu/global.ini was changed in the last 24 hours
        if: ${{ env.NEW_COMMIT_COUNT > 0 }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.date.outputs.date }}-PTU
          commit: main
          name: ${{ vars.RELEASE_TITLE_PTU }}
          body: ${{ vars.RELEASE_BODY_PTU }}
          artifacts: ${{ vars.ZIP_NAME_PTU }}
          generateReleaseNotes: true
          prerelease: true # mark the PTU as pre-release