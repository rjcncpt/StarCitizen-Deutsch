# creates a new release for LIVE and PTU channel every day at 4am when the corresponding global.ini
# was changed in the last 24 hours
#
# steps:
# 1. checkout the code
# 2. count the commits for the global.ini in the last 24 hours
# 3. get the current date
# - the following steps are only run then the commit count is > 0
# 4. create a release name with the correct version in it
# 5. create the zip
# 6. create the release

name: Create Releases
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release Tag"
        type: string
  schedule:
    - cron: "0 3 */14 * *"
jobs:
  get_context_info:
    name: Get Context Info
    runs-on: ubuntu-latest
    outputs:
      DATE: ${{ steps.date.outputs.DATE }}
      DATE_REV: ${{ steps.date_rev.outputs.DATE_REV }}
      TIME: ${{ steps.time.outputs.TIME }}
      MONTH: ${{ steps.month.outputs.MONTH }}
      NEW_COMMIT_COUNT_PTU: ${{ steps.new_commits_ptu.outputs.NEW_COMMIT_COUNT_PTU }}
      NEW_COMMIT_COUNT_LIVE: ${{ steps.new_commits_live.outputs.NEW_COMMIT_COUNT_LIVE }}
      COMMIT_PTU: ${{ steps.commit_ptu.outputs.COMMIT_PTU }}
      COMMIT_LIVE: ${{ steps.commit_live.outputs.COMMIT_LIVE }}
      RELEASE_TITLE_PTU: ${{ steps.title_ptu.outputs.RELEASE_TITLE_PTU }}
      RELEASE_TITLE_LIVE: ${{ steps.title_live.outputs.RELEASE_TITLE_LIVE }}
      LINK_PTU: ${{ steps.link_ptu.outputs.LINK_PTU }}
      LINK_LIVE: ${{ steps.link_live.outputs.LINK_LIVE }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Timezone
        id: timezone
        run: sudo timedatectl set-timezone Europe/Berlin

      - name: Get Date
        id: date
        run: echo "DATE=$(date '+%d.%m.%Y')" >> $GITHUB_OUTPUT

      - name: Get Date Reverse
        id: date_rev
        run: echo "DATE_REV=$(date '+%Y.%m.%d')" >> $GITHUB_OUTPUT

      - name: Get Time
        id: time
        run: echo "TIME=$(date '+%H:%M')" >> $GITHUB_OUTPUT

      - name: Get Month
        id: month
        run: echo "MONTH=$(date '+%B')" >> $GITHUB_OUTPUT

      - name: Create Release Title For PTU
        id: title_ptu
        if: steps.new_commits_ptu.outputs.NEW_COMMIT_COUNT_PTU > 0
        run: |
          VERSION=$(git log -1 --pretty=%s -- ptu/global.ini | cut -s -d'|' -f1 | rev | cut -c 2- | rev)
          echo "RELEASE_TITLE_PTU=$VERSION PTU (${{ steps.month.outputs.MONTH }})" >> $GITHUB_OUTPUT

      - name: Create Release Title For LIVE
        id: title_live
        if: steps.new_commits_live.outputs.NEW_COMMIT_COUNT_LIVE > 0
        run: |
          VERSION=$(git log -1 --pretty=%s -- live/global.ini | cut -s -d'|' -f1 | rev | cut -c 2- | rev)
          echo "RELEASE_TITLE_LIVE=$VERSION LIVE (${{ steps.month.outputs.MONTH }})" >> $GITHUB_OUTPUT

  ptu_release:
    name: Create PTU Release
    runs-on: ubuntu-latest
    needs: get_context_info
    if: (vars.TRIGGER_PTU_RELEASE == 1) && (needs.get_context_info.outputs.NEW_COMMIT_COUNT_PTU > 0)
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.get_context_info.outputs.COMMIT_PTU }}

      - name: Create ZIP For PTU
        run: |
          sudo timedatectl set-timezone Europe/Berlin
          mkdir release
          cp "ptu/user.cfg" "release"
          mkdir -p "release/data/Localization/german_(germany)"
          cp "ptu/global.ini" "release/data/Localization/german_(germany)/"
          cd release
          echo "${{ vars.VERSION_FILE_TEXT_PTU }} ${{ needs.get_context_info.outputs.RELEASE_TITLE_PTU }} ${{ needs.get_context_info.outputs.DATE }} - ${{ needs.get_context_info.outputs.TIME }} Uhr" >> Version.txt
          zip -r -9 "../${{ vars.ZIP_NAME_PTU }}" *

      - name: Create Release For PTU
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          tag: ${{ inputs.tag || needs.get_context_info.outputs.DATE_REV }}-PTU
          commit: ${{ needs.get_context_info.outputs.COMMIT_PTU }}
          name: ${{ needs.get_context_info.outputs.RELEASE_TITLE_PTU }}
          body: ${{ vars.RELEASE_BODY_PTU }}(${{ needs.get_context_info.outputs.LINK_PTU }})
          artifacts: ${{ vars.ZIP_NAME_PTU }}

  live_release:
    name: Create LIVE Release
    runs-on: ubuntu-latest
    needs: [get_context_info, ptu_release]
    if: always() && (needs.get_context_info.outputs.NEW_COMMIT_COUNT_LIVE > 0)
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.get_context_info.outputs.COMMIT_LIVE }}

      - name: Create ZIP For LIVE
        run: |
          sudo timedatectl set-timezone Europe/Berlin
          mkdir release
          cp "live/user.cfg" "release"
          mkdir -p "release/data/Localization/german_(germany)"
          cp "live/global.ini" "release/data/Localization/german_(germany)/"
          cd release
          echo "${{ vars.VERSION_FILE_TEXT_LIVE }} ${{ needs.get_context_info.outputs.RELEASE_TITLE_LIVE }} ${{ needs.get_context_info.outputs.DATE }} - ${{ needs.get_context_info.outputs.TIME }} Uhr" >> Version.txt
          zip -r -9 "../${{ vars.ZIP_NAME_LIVE }}" *
          cp "../live/full/global.ini" "../release/data/Localization/german_(germany)/"
          zip -r -9 "../${{ vars.ZIP_NAME_FULL_LIVE }}" *

      - name: Create Release For LIVE
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          tag: ${{ inputs.tag || needs.get_context_info.outputs.DATE_REV }}-LIVE
          commit: ${{ needs.get_context_info.outputs.COMMIT_LIVE }}
          name: ${{ needs.get_context_info.outputs.RELEASE_TITLE_LIVE }}
          body: ${{ vars.RELEASE_BODY_LIVE }}(${{ needs.get_context_info.outputs.LINK_LIVE }})
          artifacts: ${{ vars.ZIP_NAME_LIVE }}, ${{ vars.ZIP_NAME_FULL_LIVE }}
          makeLatest: true
